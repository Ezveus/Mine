#!/usr/bin/env ruby

load "server/Client.rb"

puts "Launching server"

def exitServer exitType
  printf "\r"
  Client.clients.each do |client|
    client.exit exitType
  end
  EM.stop_event_loop if exitType == :signalCatch
  begin
    $railsPID = File.new("ui/webclient/tmp/pids/server.pid").read.to_i
  rescue Errno::ENOENT
    $railsPID = -42
  end
  Process.kill "INT", $railsPID if $railsPID > 1
  puts "Terminating server"
  exit 0
end

launchRails = true              # Set to false with options

Signal.trap "INT" do
  exitServer :signalCatch
end

Signal.trap "TERM" do
  exitServer :signalCatch
end

if launchRails
  Process.fork do
    Dir.chdir "ui/webclient"
    puts "Executing rails server -d"
    Process.exec "rails server -d"
  end
end

begin
  EM.run do
    EM.start_server '0.0.0.0', 8080, Client
  end
rescue Interrupt
  puts "\rOn operating systems where Signal.trap doesn't work,"
  puts "catch Interrupt works."
  exitServer :exceptionCatch
end
